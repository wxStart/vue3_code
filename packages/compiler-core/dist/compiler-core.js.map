{
  "version": 3,
  "sources": ["../src/parser.ts", "../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from './ast';\n\nfunction createParserContext(content) {\n  return {\n    originalSource: content,\n    source: content, // \u64CD\u4F5C\u7684\u662F\u8FD9\u4E2A\u5B57\u7B26\u4E32\u0192 \u4E0D\u65AD\u89E3\u6790\n    line: 1,\n    column: 1,\n    offest: 0,\n  };\n}\n\nfunction isEnd(context) {\n  const c = context.source;\n  if (c.startsWith('</')) {\n    // \u5B69\u5B50\u9047\u5230\u8FD9\u79CD\u7684\u65F6\u5019\u4E5F\u662F\u7ED3\u675F\u7684 <div><span></span></div>\n    // \u6B64\u8981\u8FD4\u56DE sapn \u5904\u7406\u5B8C\u6210\u4E86  source =  </div> \u4F46\u662F\u4E5F\u662F\u8981\u8FD4\u56DE\u7684\n    /**\n     if (context.source.startsWith('</')) {\n         parseTag(context); \n     } \n     */\n    return true;\n  }\n  return !context.source; // \u5185\u5BB9\u6CA1\u6709\n}\n\nfunction advancePositionWithMutation(context, source, endIndex) {\n  let linesCount = 0;\n  let linePos = -1;\n  for (let i = 0; i < endIndex; i++) {\n    if (source.charCodeAt(i) == 10) {\n      // 10 \u662F\u6362\u884C\u7B26\n      linesCount++;\n      linePos = i; // \u6362\u884C\u7684\u4F4D\u7F6E\n      console.log('linePost: ', linePos);\n    }\n  }\n  context.line += linesCount; // \u786E\u5B9A\u884C\u6570\n  context.offest += endIndex;\n  context.column =\n    linePos == -1 ? context.column + endIndex : endIndex - linePos;\n}\n// \u622A\u53D6\u4F4D\u7F6E\nfunction advanceBy(context, endIndex) {\n  let source = context.source;\n  // \u4FEE\u6539\u6700\u65B0\u7684\u504F\u79FB\u91CF\u91CF\u4FE1\u606F\n  advancePositionWithMutation(context, source, endIndex);\n  // \u5220\u9664  context.source \u524DendIndex\u4E2A\u5B57\u7B26\n  context.source = source.slice(endIndex);\n}\n\nfunction parseTextData(context, endIndex) {\n  const content = context.source.slice(0, endIndex);\n  advanceBy(context, endIndex); // \u5220\u6389\u7684\u4F4D\u7F6E\n  return content;\n}\n\nfunction getCursor(context) {\n  const { line, column, offest } = context;\n\n  return { line, column, offest };\n}\nfunction getSelection(context, start, end?) {\n  end = end || getCursor(context);\n\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offest, end.offest),\n  };\n}\nfunction parseText(context) {\n  let tonkens = ['<', '{{']; // \u627E\u5230\u4ED6\u4E24\u79CD\u79BB\u5F97\u6700\u8FD1\u7684\u4E00\u4E2A\n  let endIndex = context.source.length;\n  for (let i = 0; i < tonkens.length; i++) {\n    const index = context.source.indexOf(tonkens[i]);\n    if (index !== -1 && index < endIndex) {\n      endIndex = index;\n    }\n  }\n  // \u521B\u5EFA\u4FE1\u606F \u884C\u5217\n  let start = getCursor(context);\n  // 0 ~ endIndex  \u4E3A\u6587\u672C\u5185\u5BB9\n  let content = parseTextData(context, endIndex);\n\n  return {\n    type: NodeTypes.TEXT,\n    content,\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parseInterpolation(context) {\n  let start = getCursor(context); // \u83B7\u53D6\u5F00\u59CB\u7684\u4F4D\u7F6E\n\n  const colseIndex = context.source.indexOf('}}', '{{'.length); // \u4ECE\u2018{{\u201D \u5B57\u7B26\u4F4D\u7F6E\u5F00\u59CB\u67E5\u627E\n\n  advanceBy(context, 2); // \u5220\u9664 {{\n\n  //! \u4F4D\u7F6E1111  (\u8FD9\u91CC\u62FF\u7A7A\u683C\u7684) \u8FD9\u91CC\u62FF\u5230 \u63D2\u503C\u8BED\u6CD5\u4E2D name\u524D\u9762\u7684\u7A7A\u683C \u4E2D\u7B2C\u4E00\u4E2A\u4E5F\u5C31\u662F \u63D2\u503C\"{{\"\u540E\u9762\u7684\u4F4D\u7F6E  return { line, column, offest };\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  // \u62FF\u5230\u539F\u59CB\u7684\u5185\u5BB9\n  const rawContentLength = colseIndex - 2; // \u5DF2\u7ECF\u79FB\u9664\u4E86 {{  \u6240\u4EE5\u51CF\u53BB2\n\n  const preContent = parseTextData(context, rawContentLength); // \u53EF\u4EE5\u62FF\u5230\u6587\u672C\u5185\u5BB9 \u5E76\u4E14\u53EF\u4EE5\u66F4\u65B0\u4F4D\u7F6E\u4FE1\u606F\n\n  const content = preContent.trim();\n\n  const startOffect = preContent.indexOf(content);\n\n  if (startOffect > 0) {\n    // \u8BF4\u660E\u524D\u9762\u6709\u7A7A\u683C  \u66F4\u65B0 innerStart \u7684\u4FE1\u606F  //! \u66F4\u65B0 \u4F4D\u7F6E1111 innerStart = { line, column, offest }\u7684\u4FE1\u606F\n    advancePositionWithMutation(innerStart, preContent, startOffect); //! {{    name     }} \u628A{{ \u548Cname\u4E4B\u95F4\u7684\u7A7A\u8FDB\u884C\u504F\u79FB \u5C31\u77E5\u9053name\u7684offest\u4E86\n  }\n  let endOffset = startOffect + content.length;\n  //   \u66F4\u65B0 innerEnd \u7684\u4FE1\u606F  //! \u66F4\u65B0 \u4F4D\u7F6E1111  innerEnd = { line, column, offest }\u7684\u4FE1\u606F\n  advancePositionWithMutation(innerEnd, preContent, endOffset);\n  advanceBy(context, 2); // \u5220\u9664 }}\n  return {\n    type: NodeTypes.INTERPOLATION,\n    content: {\n      type: NodeTypes.SIMPLE_EXPRESSION,\n      content,\n      loc: getSelection(context, innerStart, innerEnd),\n    },\n    loc: getSelection(context, start),\n  };\n}\n\n// \u5220\u9664\u7A7A\u683C\nfunction advanceBySpaces(context) {\n  const match = /^[ \\t\\r\\n\\f]*/.exec(context.source);\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\n\nfunction parseAttributeValue(context) {\n  let quote = context.source[0];\n\n  const isQuoted = quote === \"'\" || quote === '\"';\n  let content;\n  if (isQuoted) {\n    advanceBy(context, 1); // \u53BB\u9664\u7B2C\u4E00\u4E2A\u5F15\u53F7\n    const endIndex = context.source.indexOf(quote, 1);\n    content = parseTextData(context, endIndex);\n    advanceBy(context, 1); // \u53BB\u9664\u503C\u540E\u9762\u7684\u5F15\u53F7\n    advanceBySpaces(context);\n  } else {\n    console.log(\n      'context.source.match(/([^ \\t\\r\\n/>])+/): ',\n      context.source.match(/([^ \\t\\r\\n/>])+/)\n    );\n    debugger;\n    content = context.source.match(/([^ \\t\\r\\n/>])+/)[0];\n    advanceBy(context, content.length); // \u53BB\u9664\u503C\n    advanceBySpaces(context);\n  }\n\n  return content;\n}\nfunction parseAttribute(context) {\n  const start = getCursor(context);\n  let match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  console.log('parseAttribute match: ', match);\n  const name = match[0]; // \u5C5E\u6027\u540D\n  advanceBy(context, name.length);\n  let vlaue;\n  debugger;\n  if (/^[ \\t\\r\\n\\f]*=/.test(context.source)) {\n    advanceBySpaces(context);\n    advanceBy(context, 1); // \u5220=\n    advanceBySpaces(context);\n    vlaue = parseAttributeValue(context);\n  }\n  debugger;\n\n  const loc = getSelection(context, start); // \u5904\u7406\u5B8C\u5C5E\u6027 \u8BA1\u7B97\u5C5E\u6027\u7684\u4F4D\u7F6E\u4FE1\u606F\n  return {\n    type: NodeTypes.ATTRIBUTE,\n    name,\n    value: {\n      type: NodeTypes.TEXT,\n      content: vlaue,\n      loc: loc,\n    },\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parseAttributes(context) {\n  const props = [];\n\n  while (context.source.length > 0 && !context.source.startsWith('>')) {\n    props.push(parseAttribute(context));\n    advanceBySpaces(context); // \u53BB\u7A7A\u683C\n  }\n\n  return props;\n}\n\nfunction parseTag(context) {\n  const start = getCursor(context);\n  // https://regexper.com/\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\n  console.log('match: ', match);\n  const tag = match[1];\n  advanceBy(context, match[0].length);\n  advanceBySpaces(context);\n\n  // \u8FD9\u91CC\u6709\u53EF\u80FD\u6709\u5C5E\u6027 <div  a=\"1\" b='2' ></div>\n\n  let props = parseAttributes(context);\n  console.log('props: ', props);\n\n  let isSelfClosing = context.source.startsWith('/>');\n  if (isSelfClosing) {\n  }\n  advanceBy(context, isSelfClosing ? 2 : 1); // \u770B\u662F\u5220\u9664 \"/>\"\" \u8FD8\u662F \">\"\n\n  return {\n    type: NodeTypes.ELEMENT,\n    tag,\n    isSelfClosing,\n    children: [],\n    props,\n    loc: getSelection(context, start),\n  };\n}\n\nfunction parseElement(context) {\n  // \u89E3\u6790\u6807\u7B7E <br /> <div a=\"12\" ></div>\n  let ele = parseTag(context);\n\n  // \u8FD9\u91CC\u662F\u5143\u7D20\u91CC\u9762\u7684\u5B69\u5B50\n  let children = parserChildren(context); // \u5904\u7406\u513F\u5B50\n  ele.children = children;\n\n  if (context.source.startsWith('</')) {\n    parseTag(context); // <div></div> \u79FB\u9664\u540E\u7EED\u7684</div>\n  }\n  ele.loc = getSelection(context, ele.loc.start); // \u91CD\u65B0\u8BA1\u7B97\u4F4D\u7F6E\u4FE1\u606F\n\n  return ele;\n}\n\nfunction parserChildren(context) {\n  const nodes = [];\n\n  while (!isEnd(context)) {\n    const c = context.source;\n    let node;\n    if (c.startsWith('{{')) {\n      // {{  xxx }}\n      node = parseInterpolation(context);\n    } else if (c[0] == '<') {\n      // \u5143\u7D20  </div>\n      node = parseElement(context);\n    } else {\n      // \u6587\u672C   abd {{name}} \u6216\u8005\u662F abd  <div></div>\n      node = parseText(context);\n    }\n    nodes.push(node);\n  }\n  console.log('nodes: 111', nodes);\n\n  for (let index = 0; index < nodes.length; index++) {\n    const node = nodes[index];\n    if (node.type == NodeTypes.TEXT) {\n      debugger;\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n        nodes[index] = null;\n      } else {\n        node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n      }\n    }\n  }\n  return nodes.filter(Boolean);\n}\n\nfunction createRoot(children, loc) {\n  return {\n    type: NodeTypes.ROOT,\n    children,\n    loc,\n  };\n}\n\nexport function parse(template) {\n  // \u6839\u636Etemplate \u4EA7\u751F\u4E00\u68F5\u6811  line  column  offest\n\n  const context = createParserContext(template);\n\n  const start = getCursor(context);\n  const children = parserChildren(context);\n  return createRoot(children, getSelection(context, start));\n}\n", "// \u7F16\u8BD1\u4E3B\u8981\u5206\u4E3A\u4E09\u6B65\uFF1A\n// 1. \u9700\u8981\u5C06\u6A21\u7248\u8F6C\u5316\u4E3Aast\u8BED\u6CD5\u6811\n// 2. \u8F6C\u5316\u751F\u6210codegennode\n// 3. \u8F6C\u5316\u6210render\u51FD\u6570\n\nimport { parse } from './parser';\n\nexport { parse };\nexport function compile(template) {\n  const ast = parse(template);\n}\n"],
  "mappings": "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",
  "names": []
}
